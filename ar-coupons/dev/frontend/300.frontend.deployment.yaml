---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    image.openshift.io/triggers: |-
      [
        {
          "from":{
            "kind":"ImageStreamTag",
            "name":"dev-arc-frontend:latest"
          },
          "fieldPath":"spec.template.spec.containers[?(@.name==\"dev-arc-frontend\")].image"
        }
      ]
  name: dev-arc-frontend
  labels:
    app: dev-arc-frontend
    app.kubernetes.io/component: dev-arc-frontend
    app.kubernetes.io/instance: dev-arc-frontend
    app.kubernetes.io/part-of: dev-arc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dev-arc
      deployment: dev-arc-frontend
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
        app.kubernetes.io/part-of: dev-arc
        deployment: dev-arc-frontend
    spec:
      containers:
        - name: dev-arc-frontend
          image: 'dev-arc-frontend:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          ## this is where we tell it where to find the model interface
          env:
            - name: OBJECT_DETECTION_URL
              valueFrom:
                configMapKeyRef:
                  name: dev-arc-frontend
                  key: OBJECT_DETECTION_URL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
